<?xml version="1.0" encoding="utf-8"?>

<Tree Root="SyntaxNode">

    <PredefinedNode Name="SyntaxToken" Base="SyntaxNode"/>
    <PredefinedNode Name="SyntaxTrivia" Base="SyntaxNode"/>

    <AbstractNode Name="InstructionSyntax" />

    <Node Name="IntOperandInstructionSyntax" Base="InstructionSyntax">
        <Kind Name="IntOperandInstruction"/>

        <Field Name="OpCode" Type="SyntaxToken" />
        <Field Name="Operand" Type="SyntaxToken" />
    </Node>

    <Node Name="LoadStringInstructionSyntax" Base="InstructionSyntax">
        <Kind Name="LoadStringInstruction"/>

        <Field Name="OpCode" Type="SyntaxToken" />
        <Field Name="Operand" Type="SyntaxToken" />
    </Node>

    <Node Name="LabelOperandInstructionSyntax" Base="InstructionSyntax">
        <Kind Name="LabelOperandInstruction"/>

        <Field Name="OpCode" Type="SyntaxToken" />
        <Field Name="Label" Type="SyntaxToken" />
    </Node>

    <Node Name="CallInstructionSyntax" Base="InstructionSyntax">
        <Kind Name="CallInstruction"/>

        <Field Name="OpCode" Type="SyntaxToken" />
        <Field Name="Label" Type="SyntaxToken" />
        <Field Name="ArgumentCount" Type="SyntaxToken" />
    </Node>

    <Node Name="FunctionInstructionSyntax" Base="InstructionSyntax">
        <Kind Name="FunctionInstruction"/>

        <Field Name="OpCode" Type="SyntaxToken" />
        <Field Name="Label" Type="SyntaxToken" />
        <Field Name="LocalCount" Type="SyntaxToken" />
    </Node>

    <Node Name="NoOperandInstructionSyntax" Base="InstructionSyntax">
        <Kind Name="NoOperandInstruction"/>

        <Field Name="OpCode" Type="SyntaxToken" />
    </Node>

    <Node Name="AssemblyListing">
        <Kind Name="AssemblyListing"/>

        <Field Name="Instructions" Type="ImmutableArray&lt;InstructionSyntax&gt;" />
        <Field Name="EndOfFileToken" Type="SyntaxToken" />
    </Node>

    <AbstractNode Name="ExpressionSyntax" />

    <PredefinedNode Name="LiteralExpressionSyntax" Base="ExpressionSyntax"/>

    <Node Name="AssignmentExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="AssignmentExpression"/>

        <Field Name="Name" Type="ExpressionSyntax" />
        <Field Name="EqualsToken" Type="SyntaxToken" />
        <Field Name="Expression" Type="ExpressionSyntax" />
    </Node>

    <Node Name="ArrayCreationExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="ArrayCreationExpression"/>

        <Field Name="NewKeyword" Type="SyntaxToken" />
        <Field Name="Type" Type="NameSyntax" />

        <Field Name="OpenBracket" Type="SyntaxToken" />
        <Field Name="ArrayRank" Type="ExpressionSyntax?" />
        <Field Name="CloseBracket" Type="SyntaxToken" />

        <Field Name="Initializer" Type="ArrayInitializerExpressionSyntax?" />
    </Node>

    <Node Name="ArrayInitializerExpressionSyntax">
        <Kind Name="ArrayInitializer"/>

        <Field Name="OpenBraceToken" Type="SyntaxToken" />
        <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" />
        <Field Name="CloseBraceToken" Type="SyntaxToken" />
    </Node>

    <Node Name="BinaryExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="BinaryExpression"/>

        <Field Name="Left" Type="ExpressionSyntax" />
        <Field Name="OperatorToken" Type="SyntaxToken" />
        <Field Name="Right" Type="ExpressionSyntax" />
    </Node>

    <Node Name="BlockExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="BlockExpression"/>

        <Field Name="OpenBraceToken" Type="SyntaxToken" />
        <Field Name="Statements" Type="ImmutableArray&lt;StatementSyntax&gt;" />
        <Field Name="Expression" Type="ExpressionSyntax" />
        <Field Name="CloseBraceToken" Type="SyntaxToken" />
    </Node>

    <Node Name="NewExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="NewExpression"/>

        <Field Name="NewKeyword" Type="SyntaxToken" />

        <Field Name="Type" Type="NameSyntax" />
        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
    </Node>

    <Node Name="CallExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="CallExpression"/>

        <Field Name="Expression" Type="ExpressionSyntax" />
        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
    </Node>

    <Node Name="ForExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="ForExpression"/>

        <Field Name="ForKeyword" Type="SyntaxToken" />
        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="Variable" Type="SyntaxToken" />
        <Field Name="LessThanDashToken" Type="SyntaxToken" />
        <Field Name="FromExpression" Type="ExpressionSyntax" />
        <Field Name="ToKeyword" Type="SyntaxToken" />
        <Field Name="ToExpression" Type="ExpressionSyntax" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
        <Field Name="Body" Type="ExpressionSyntax" />
    </Node>

    <Node Name="GroupExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="GroupExpression"/>

        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="Expression" Type="ExpressionSyntax" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
    </Node>

    <Node Name="IfExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="IfExpression"/>

        <Field Name="IfKeyword" Type="SyntaxToken" />
        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="ConditionExpression" Type="ExpressionSyntax" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
        <Field Name="ThenExpression" Type="ExpressionSyntax" />
        <Field Name="ElseKeyword" Type="SyntaxToken" />
        <Field Name="ElseExpression" Type="ExpressionSyntax" />
    </Node>

    <Node Name="IndexExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="IndexExpression"/>

        <Field Name="Expression" Type="ExpressionSyntax" />
        <Field Name="OpenBracket" Type="SyntaxToken" />
        <Field Name="Index" Type="ExpressionSyntax" />
        <Field Name="CloseBracket" Type="SyntaxToken" />
    </Node>

    <Node Name="MemberAccessExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="MemberAccessExpression"/>

        <Field Name="Expression" Type="ExpressionSyntax" />
        <Field Name="DotToken" Type="SyntaxToken" />
        <Field Name="Name" Type="IdentifierNameSyntax" />
    </Node>

    <Node Name="ThisExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="ThisExpression"/>

        <Field Name="ThisToken" Type="SyntaxToken" />
    </Node>

    <Node Name="WhileExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="WhileExpression"/>

        <Field Name="WhileKeyword" Type="SyntaxToken" />
        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="ConditionExpression" Type="ExpressionSyntax" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
        <Field Name="Body" Type="ExpressionSyntax" />
    </Node>

    <Node Name="UnaryExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="UnaryExpression"/>

        <Field Name="OperatorToken" Type="SyntaxToken" />
        <Field Name="Operand" Type="ExpressionSyntax" />
    </Node>

    <Node Name="UnitExpressionSyntax" Base="ExpressionSyntax">
        <Kind Name="UnitExpression"/>

        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
    </Node>

    <AbstractNode Name="NameSyntax" Base="ExpressionSyntax" />
    <AbstractNode Name="SimpleNameSyntax" Base="NameSyntax" />

    <Node Name="IdentifierNameSyntax" Base="SimpleNameSyntax">
        <Kind Name="IdentifierName"/>

        <Field Name="Identifier" Type="SyntaxToken" />
    </Node>

    <Node Name="GenericNameSyntax" Base="SimpleNameSyntax">
        <Kind Name="GenericName"/>

        <Field Name="Identifier" Type="SyntaxToken" />
        <Field Name="TypeArgumentList" Type="TypeArgumentList" />
    </Node>

    <Node Name="TypeArgumentList">
        <Kind Name="TypeArgumentList"/>

        <Field Name="LessThan" Type="SyntaxToken" />
        <Field Name="ArgumentList" Type="SeparatedSyntaxList&lt;NameSyntax&gt;" />
        <Field Name="GreaterThan" Type="SyntaxToken" />
    </Node>

    <Node Name="QualifiedNameSyntax" Base="NameSyntax">
        <Kind Name="QualifiedName"/>

        <Field Name="Left" Type="NameSyntax" />
        <Field Name="DotToken" Type="SyntaxToken" />
        <Field Name="Right" Type="SimpleNameSyntax" />
    </Node>

    <AbstractNode Name="StatementSyntax" />

    <Node Name="BreakStatementSyntax" Base="StatementSyntax">
        <Kind Name="BreakStatement"/>

        <Field Name="BreakKeyword" Type="SyntaxToken" />
    </Node>

    <Node Name="ContinueStatementSyntax" Base="StatementSyntax">
        <Kind Name="ContinueStatement"/>

        <Field Name="ContinueKeyword" Type="SyntaxToken" />
    </Node>

    <Node Name="ExpressionStatementSyntax" Base="StatementSyntax">
        <Kind Name="ExpressionStatement"/>

        <Field Name="Expression" Type="ExpressionSyntax" />
    </Node>

    <Node Name="VariableDeclarationStatementSyntax" Base="StatementSyntax">
        <Kind Name="VariableDeclarationStatement"/>

        <Field Name="ValOrVarToken" Type="SyntaxToken" />
        <Field Name="IdentifierToken" Type="SyntaxToken" />
        <Field Name="TypeAnnotation" Type="TypeAnnotationSyntax?" />
        <Field Name="Initializer" Type="InitializerSyntax?" />
    </Node>

    <Node Name="GlobalStatementSyntax" Base="MemberSyntax">
        <Kind Name="GlobalStatement"/>

        <Field Name="Statement" Type="StatementSyntax" />
    </Node>

    <Node Name="CompilationUnitSyntax">
        <Kind Name="CompilationUnit"/>

        <Field Name="Namespace" Type="NamespaceDeclarationSyntax?" />
        <Field Name="Usings" Type="ImmutableArray&lt;UsingDirectiveSyntax&gt;" />
        <Field Name="Members" Type="ImmutableArray&lt;MemberSyntax&gt;" />

        <Field Name="EndOfFileToken" Type="SyntaxToken" />
    </Node>

    <Node Name="NamespaceDeclarationSyntax">
        <Kind Name="NamespaceDeclaration"/>

        <Field Name="NamespaceKeyword" Type="SyntaxToken" />
        <Field Name="Name" Type="NameSyntax" />
    </Node>

    <Node Name="ParameterSyntax">
        <Kind Name="Parameter"/>

        <Field Name="Identifier" Type="SyntaxToken" />
        <Field Name="TypeAnnotation" Type="TypeAnnotationSyntax" />
    </Node>

    <Node Name="InitializerSyntax">
        <Kind Name="Initializer"/>

        <Field Name="EqualsToken" Type="SyntaxToken" />
        <Field Name="Expression" Type="ExpressionSyntax" />
    </Node>

    <Node Name="TypeAnnotationSyntax">
        <Kind Name="TypeAnnotation"/>

        <Field Name="ColonToken" Type="SyntaxToken" />
        <Field Name="Type" Type="NameSyntax" />
    </Node>

    <Node Name="UsingDirectiveSyntax">
        <Kind Name="UsingDirective"/>

        <Field Name="UsingKeyword" Type="SyntaxToken" />
        <Field Name="UsingStyleKeyword" Type="SyntaxToken?" />
        <Field Name="Name" Type="NameSyntax" />
    </Node>

    <Node Name="TemplateSyntax">
        <Kind Name="Template"/>

        <Field Name="OpenBrace" Type="SyntaxToken" />
        <Field Name="Members" Type="ImmutableArray&lt;MemberSyntax&gt;" />
        <Field Name="CloseBrace" Type="SyntaxToken" />
    </Node>

    <AbstractNode Name="MemberSyntax" />

    <Node Name="FunctionBodySyntax" Base="MemberSyntax">
        <Kind Name="FunctionBody"/>

        <Field Name="EqualsToken" Type="SyntaxToken" />
        <Field Name="Body" Type="ExpressionSyntax" />
    </Node>

    <Node Name="FunctionDeclarationSyntax" Base="MemberSyntax">
        <Kind Name="FunctionDeclaration"/>

        <Field Name="DefKeyword" Type="SyntaxToken" />
        <Field Name="Identifier" Type="SyntaxToken" />
        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="Parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
        <Field Name="TypeAnnotation" Type="TypeAnnotationSyntax?" />
        <Field Name="Body" Type="FunctionBodySyntax?" />
    </Node>

    <Node Name="ClassDeclarationSyntax" Base="MemberSyntax">
        <Kind Name="ClassDeclaration"/>

        <Field Name="ClassKeyword" Type="SyntaxToken" />
        <Field Name="Identifier" Type="SyntaxToken" />
        <Field Name="OpenParenToken" Type="SyntaxToken" />
        <Field Name="Fields" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;" />
        <Field Name="CloseParenToken" Type="SyntaxToken" />
        <Field Name="Template" Type="TemplateSyntax?" />
    </Node>

    <Node Name="ObjectDeclarationSyntax" Base="MemberSyntax">
        <Kind Name="ObjectDeclaration"/>

        <Field Name="ObjectKeyword" Type="SyntaxToken" />
        <Field Name="Identifier" Type="SyntaxToken" />
        <Field Name="Template" Type="TemplateSyntax" />
    </Node>

</Tree>