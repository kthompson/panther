# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [AzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

variables:
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

trigger:
  branches:
    include:
      - main

stages:
  - stage: ubuntu_latest
    displayName: 'ubuntu-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: Test
        displayName: 'Test'
        dependsOn: [  ]
        steps:
          - task: Cache@2
            inputs:
              key: $(Agent.OS) | global.json, src/**/*.csproj
              restoreKeys: $(Agent.OS)
              path: $(Pipeline.Workspace)/.nuget
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile Test --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: test-results
              pathtoPublish: 'artifacts/test-results'
      - job: ReportCoverage
        displayName: 'ReportCoverage'
        dependsOn: [ Test ]
        steps:
          - task: Cache@2
            inputs:
              key: $(Agent.OS) | global.json, src/**/*.csproj
              restoreKeys: $(Agent.OS)
              path: $(Pipeline.Workspace)/.nuget
          - task: CmdLine@2
            inputs:
              script: './build.cmd ReportCoverage --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: coverage-report.zip
              pathtoPublish: 'artifacts/reports/coverage-report.zip'
  - stage: windows_latest
    displayName: 'windows-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'windows-latest'
    jobs:
      - job: Test
        displayName: 'Test'
        dependsOn: [  ]
        steps:
          - task: Cache@2
            inputs:
              key: $(Agent.OS) | global.json, src/**/*.csproj
              restoreKeys: $(Agent.OS)
              path: $(Pipeline.Workspace)/.nuget
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile Test --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: test-results
              pathtoPublish: 'artifacts/test-results'
      - job: ReportCoverage
        displayName: 'ReportCoverage'
        dependsOn: [ Test ]
        steps:
          - task: Cache@2
            inputs:
              key: $(Agent.OS) | global.json, src/**/*.csproj
              restoreKeys: $(Agent.OS)
              path: $(Pipeline.Workspace)/.nuget
          - task: CmdLine@2
            inputs:
              script: './build.cmd ReportCoverage --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: coverage-report.zip
              pathtoPublish: 'artifacts/reports/coverage-report.zip'
  - stage: macOS_latest
    displayName: 'macOS-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'macOS-latest'
    jobs:
      - job: Test
        displayName: 'Test'
        dependsOn: [  ]
        steps:
          - task: Cache@2
            inputs:
              key: $(Agent.OS) | global.json, src/**/*.csproj
              restoreKeys: $(Agent.OS)
              path: $(Pipeline.Workspace)/.nuget
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile Test --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: test-results
              pathtoPublish: 'artifacts/test-results'
      - job: ReportCoverage
        displayName: 'ReportCoverage'
        dependsOn: [ Test ]
        steps:
          - task: Cache@2
            inputs:
              key: $(Agent.OS) | global.json, src/**/*.csproj
              restoreKeys: $(Agent.OS)
              path: $(Pipeline.Workspace)/.nuget
          - task: CmdLine@2
            inputs:
              script: './build.cmd ReportCoverage --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: coverage-report.zip
              pathtoPublish: 'artifacts/reports/coverage-report.zip'
